@page
@model WebTrackED_CHED_MIMAROPA.Pages.Application.Document.DocumentTrackingModel

@{
    ViewData["Title"] = "Document-View";
    var prevPage = Model.PreviousPage;
    var breadcrump_data = new BreadCrumpViewModel
            {
                pageName = "Document Tracking",
                date = DateTime.Now,
                breadCrump = new (string, string?, string, bool, int?)[]                                                        
                {
                ("fa-solid fa-list-check",prevPage,"Document List",false,null),
                ("fa-solid fa-file-contract",null,"Document Tracking",true,null)

                }
            };
}
@await Component.InvokeAsync("BreadCrump", breadcrump_data)
@if (Model.DocumentAttachment.DocumentAttachment.Status == Status.Approved || Model.DocumentAttachment.DocumentAttachment.Status == Status.Disapproved)
{
    <h6 class="py-2 rounded-2 text-center @(Model.DocumentAttachment.DocumentAttachment.Status == Status.Approved?"bg-success-subtle":"bg-danger-subtle")">@Model.DocumentAttachment.DocumentAttachment.Status</h6>
}
<h5 class="py-2 rounded-2 bg-info text-white w-100 text-center mb-4"><i class="fa-solid fa-file-contract"></i> DocumentTracking</h5>

@*
    <div class="bg-white mb-3 shadow p-4 rounded-3 container">
    @if (Model.DocumentProcedures.Count() > 0)
    {
        <div class="row">
            @foreach (var docsProcedure in Model.DocumentProcedures)
            {
                <div class="col-lg-3 col-md-4 col-12 mb-lg-0 mb-md-0 mb-4">
                    <div class="d-flex gap-2">
                        <div class="@(Model.DocumentProcedures.Count() > 4 ?"mb-4":"")">
                            <i class="fa-solid @(docsProcedure.IsDone?"fa-check bg-info text-white":"fa-file-waveform border text-primary border-primary bg-white border-2 border-opacity-75")  p-3 rounded-circle  fs-5"></i>
                        </div>
                        <div>
                            <h6 class="text-secondary m-0 p-0 fw-bold">@(docsProcedure.ProcedureTitle.Length > 15 ? $"{docsProcedure.ProcedureTitle.Substring(0,15)}..." : docsProcedure.ProcedureTitle)</h6>

                            <div class="dropdown">
                                <a data-bs-toggle="dropdown" class="text-decoration-none clickable text-primary text-nowrap">View details <i class="fa-solid fa-eye"></i></a>

                                <div class="dropdown-menu p-3 text-center border-0 shadow bg-white">
                                    <p>@docsProcedure.ProcedureDescription</p>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <h6 class="text-body-tertiary text-center">No procedure</h6>
    }
*@

</div>
<div class="row">
    <div class="col-12">
        <div class="rounded-3  mb-4 d-flex justify-content-center">
            <div class="d-flex justify-content-between position-relative" style="width: 500px">
                <div class="w-100  bg-secondary bg-opacity-50 position-absolute" style="height: 2px; top: 25px">
                </div>
                <div class="d-flex flex-column align-items-center z-1 bg-white">
                    <div class="border border-2  border-success border-opacity-50 d-flex align-items-center justify-content-center rounded-circle" style="width: 50px; height: 50px;">
                        <i class="fs-4 fa fa-file-circle-exclamation text-success"></i>
                    </div>
                    <h6 class="text-secondary">
                        Pending
                        @if (Model.IsPending)
                        {

                            <i class="fa-solid fa-clock-rotate-left text-warning"></i>
                        }
                        else if (Model.IsOnProcess || Model.IsPreparingForRelease ||Model.IsCompleted)
                        {
                            <i class="fa-solid fa-circle-check text-success"></i>
                        }
                    </h6>
                </div>
                <div class="d-flex flex-column align-items-center z-1 bg-white">

                    <div class="border border-2 @(!Model.IsPending ? "border-success":"border-secondary") border-opacity-50 d-flex align-items-center justify-content-center rounded-circle" style="width: 50px; height: 50px;">
                        <i class="fs-4 fa fa-file-pen @(!Model.IsPending ? "text-success":"text-body-secondary")"></i>
                    </div>
                    <h6 class="text-secondary">
                        On process
                        @if (Model.IsOnProcess)
                        {
                            <i class="fa-solid fa-clock-rotate-left text-warning"></i>
                        }
                        else if (Model.IsPreparingForRelease||Model.IsCompleted)
                                    {
                            <i class="fa-solid fa-circle-check text-success"></i>
                        }
                    </h6>
                </div>
                <div class="d-flex flex-column align-items-center z-1 bg-white">
                    <div class="border border-2 @(!Model.IsPending && !Model.IsOnProcess && !Model.IsPreparingForRelease && !Model.IsCompleted ? "border-success":"border-secondary") border-opacity-50 d-flex align-items-center justify-content-center rounded-circle" style="width: 50px; height: 50px;">
                        <i class="fs-4 fa fa-file-circle-check  @(!Model.IsPending && !Model.IsOnProcess && !Model.IsPreparingForRelease && !Model.IsCompleted ? "text-success":"text-body-secondary")"></i>
                    </div>
                    <h6 class="text-secondary">
                        Completed
                        @if (Model.IsPreparingForRelease)
                        {
                            <i class="fa-solid fa-clock-rotate-left text-warning"></i>
                        }
                        else if (Model.IsCompleted)
                        {
                            <i class="fa-solid fa-circle-check text-success"></i>
                        }

                    </h6>
                </div>


            </div>
        </div>
    </div>
    <div class="col-lg-5 col-md-5 col-12 mb-lg-0 mb-md-0 mb-3">
        <div class="rounded-3 pb-5 bg-white shadow p-4">
            <h5 class="fw-bolder text-primary mb-4">Document Details</h5>
                <div class="d-flex mb-3 align-items-center justify-content-between">
                    <div class="col-4">
                    <span class="text-body-secondary">Document Ref#.Code</span>
                    </div>
                  <div class="col-8 d-flex justify-content-end">
                    <span class="text-dark fw-bolder d-block text-end">@(Model.DocumentAttachment.DocumentAttachment.DocumentType == DocumentType.WalkIn ? $"dW{Model.DocumentAttachment.DocumentAttachment.Id.ToString("00000")}" : $"dE{Model.DocumentAttachment.DocumentAttachment.Id.ToString("00000")}")</span>
                  </div>
                  
                </div>
     
                <div class="row mb-3">
                    <div class="col-4">
                    <span class="text-body-secondary">Sender</span>
                    </div>
                    <div class="col-8 d-flex justify-content-end">
                    <span class="text-dark fw-bolder d-block text-end">@(Model.DocumentAttachment.DocumentAttachment.DocumentType != DocumentType.WalkIn ? $"{Model.DocumentAttachment.SenderAccount.FirstName} {Model.DocumentAttachment.SenderAccount.MiddleName} {Model.DocumentAttachment.SenderAccount.LastName} {Model.DocumentAttachment.SenderAccount.Suffixes}":"Prepared by Records Office")</span>
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-4">
                        <span class="text-body-secondary">Prioritization</span>
                    </div>
                    <div class="col-8 d-flex justify-content-end">
                    <span class="text-dark fw-bolder d-block text-end">@(Model.DocumentAttachment.DocumentAttachment.Prioritization != null ? Model.DocumentAttachment.DocumentAttachment.Prioritization : "Not Set")</span>
                    </div>
                 
                </div>
            <div class="row mb-3">
                <div class="col-4">
                    <span class="text-body-secondary">Document Type</span>
                </div>
                <div class="col-8 d-flex justify-content-end">
                    <span class="text-dark fw-bolder d-block text-end">@(Model.DocumentAttachment.DocumentAttachment.DocumentType == DocumentType.WalkIn ? "Walk In" : $"Electronic")</span>
                </div>

            </div>
            <div class="row mb-3">
                <div class="col-4">
                    <span class="text-body-secondary col-4">Category</span>
                </div>
                <div class="col-8 d-flex justify-content-end">
                    <span class="text-dark fw-bolder d-block text-end">@Model.DocumentAttachment.Category.CategoryName</span>
                </div>

            </div>
            <div class="row mb-3">
                <div class="col-4">
                    <span class="text-body-secondary col-4">Sub Category</span>
                </div>
                <div class="col-8 d-flex justify-content-end">
                    <span class="text-dark fw-bolder d-block text-end">@Model.DocumentAttachment.SubCategory.SubCategoryName</span>
                </div>
               
            </div>
            <div class="row mb-3">
                <div class="col-4">
                    <span class="text-body-secondary col-4">Subject</span>
                </div>
                <div class="col-8 d-flex justify-content-end">
                    <span class="text-dark fw-bolder d-block text-end">@(Model.DocumentAttachment.DocumentAttachment.Subject ?? "None")</span>
                </div>

            </div>
            <div class="row mb-3">
                <div class="col-4">
                    <span class="text-body-secondary col-4">Description</span>
                </div>
                <div class="col-8 d-flex justify-content-end">
                    <span class="text-dark fw-bolder d-block text-end">@(Model.DocumentAttachment.DocumentAttachment.Description ?? "None")</span>
                </div>

            </div>
        </div>
    </div>
    <div class="col-lg-7 col-md-7 col-12 overflow-x-scroll pb-5 remove-scrollbar">
        <div class="rounded-3 bg-white shadow p-4" style="width: 550px">
            <h5 class="fw-bolder text-primary mb-4"><i class="fa-solid fa-file-signature"></i> Document process</h5>
            <hr />
            <div class="container position-relative">
                <span class="z-0 position-absolute bg-secondary-subtle"style="padding: 0 2px;  left: 45.5%; height: 100%"></span>
                <div class="row">
                    @foreach(var docTracking in Model.DocumentTrackings)
                    {
                        <div class="col-5 mb-3">
                            <h6 class="text-end  @(docTracking.DocumentTracking.Id == Model.MaxId ? "fw-bold" :"")">@docTracking.DocumentTracking.AddedAt.ToString("dd MMM,yyy hh:mm tt")</h6>
                        </div>
                        <div class="col-1 mb-3">
                            <div class="d-flex align-items-center justify-content-center">
                                <span class="@(docTracking.DocumentTracking.Id == Model.MaxId ? "bg-success": "bg-secondary") rounded-circle p-2 z-1">
                                </span>
                            </div>
                        </div>
                        <div class="col-6 mb-3">
                            <h6 class="@(docTracking.DocumentTracking.Id == Model.MaxId ? "fw-bold" :"")">@(docTracking.DocumentTracking.ReviewerStatus == ReviewerStatus.OnReview ? "Reviewing by" : docTracking.DocumentTracking.ReviewerStatus == ReviewerStatus.Reviewed ? "Reviewed by" : docTracking.DocumentTracking.ReviewerStatus == ReviewerStatus.ToReceived ? "To Be Recieved by" : docTracking.DocumentTracking.ReviewerStatus == ReviewerStatus.PreparingRelease ? "Ready for Release by":docTracking.DocumentTracking.ReviewerStatus == ReviewerStatus.Approved ? "Approved by":docTracking.DocumentTracking.ReviewerStatus == ReviewerStatus.Passed?"Successfully Passed by":"Disapproved by")
                                <span>
                                    @($"{docTracking.Account.FirstName} {docTracking.Account.MiddleName} {docTracking.Account.LastName} {docTracking.Account.Suffixes}")
                                    @(Model.UserId == docTracking.Account.Id ? "(You)" : "")
                                </span>
                            </h6>
                            <span class="text-primary fw-bold">@(docTracking.Office != null ? docTracking.Office.OfficeName:"N/A")</span>
                        </div>
                    }
              
                </div>
            </div>
           
        </div>
    </div>
</div>
