@page
@model WebTrackED_CHED_MIMAROPA.Pages.Application.Document.ViewDocsModel

@{
	ViewData["Title"] = "Document-View";
	var prevPage = Model.PreviousPage;
	var breadcrump_data = new BreadCrumpViewModel
			{
				pageName = "View Document",
				date = DateTime.Now,
				breadCrump = new (string, string?, string, bool, int?)[]
																		{
				("fa-solid fa-list-check",prevPage,"Document List",false,null),
				("fa-solid fa-file-circle-question",null,"Document View",true,null)

							   }
			};
	var fileName = Model.DocumentAttachment.DocumentAttachment.FileName;
	var splitFile = fileName.Split('=');
	var finalFileName = splitFile[splitFile.Length - 1];
	var returnUrlVal = "./Ended/Index";
	var qrCode = ViewData["qr-code"] as string;

	var pending = Model.DocumentAttachment.DocumentTrackings.Count() <= 1 || Model.DocumentAttachment.DocumentTrackings.Count() > 1 && !Model.DocumentAttachment.DocumentTrackings.Any(x => x.ReviewerStatus == ReviewerStatus.OnReview); ;
	var onprocess = Model.DocumentAttachment.DocumentTrackings.Count() > 1 && !Model.DocumentAttachment.DocumentTrackings.Any(x => x.ReviewerStatus == ReviewerStatus.Completed || x.ReviewerStatus == ReviewerStatus.PreparingRelease || x.ReviewerStatus == ReviewerStatus.Approved);
	var approved = Model.DocumentAttachment.DocumentTrackings.First().ReviewerStatus == ReviewerStatus.Approved;
	var preparingRelease = Model.DocumentAttachment.DocumentTrackings.First().ReviewerStatus == ReviewerStatus.PreparingRelease;
	var completed = Model.DocumentAttachment.DocumentTrackings.First().ReviewerStatus == ReviewerStatus.Completed;

}
@await Component.InvokeAsync("BreadCrump", breadcrump_data)
<div class="rounded-2 overflow-hidden bg-white shadow">
	<h5 class="py-2 text-white   text-center bg-primary">Document Ref#.Code: <span class="fw-bolder">@(Model.DocumentAttachment.DocumentAttachment.DocumentType == DocumentType.WalkIn ? $"dW{Model.DocumentAttachment.DocumentAttachment.Id.ToString("00000")}" : $"dE{Model.DocumentAttachment.DocumentAttachment.Id.ToString("00000")}")</span></h5>
	<div class="container px-lg-5 px-3 pt-2 pb-5">
		<div class="row">
			<div class="col-12">
				<div class="mb-2 row">
					<div class="col-lg-6 col-12 mb-2 mb-lg-0">
						<span class="@(User.IsInRole("Sender")?"d-none":"") fw-bolder d-block mb-2">
							Sender -
							@if (Model.DocumentAttachment.DocumentAttachment.DocumentType == DocumentType.OnlineSubmission)
							{
								<span class="fw-lighter">@($"{Model.DocumentAttachment.SenderAccount.FirstName} {Model.DocumentAttachment.SenderAccount.MiddleName} {Model.DocumentAttachment.SenderAccount.LastName} {Model.DocumentAttachment.SenderAccount.Suffixes}")</span>
								<a asp-page="/Application/Profiles/Index" asp-route-accId="@Model.DocumentAttachment.SenderAccount.Id">(View Profile)</a>
							}
							else
							{
								<span class="text-opacity-50 fw-bold text-body-tertiary">From Records Office</span>
							}

						</span>
						<span class="@(pending ? "bg-info":onprocess ? "bg-primary":preparingRelease  ?"bg-warning" :completed || approved ? "bg-success":"bg-danger") text-white fw-bolder px-3 py-2 rounded-pill">@(preparingRelease ? "Ready for Release" : pending ? "Pending": onprocess ? "On proccess": completed? "Completed":approved ? "Approved":"")</span>
						<span class="text-dark fw-bolder px-3 py-2 rounded-pill bg-secondary-subtle">@(Model.DocumentAttachment.DocumentAttachment.DocumentType == DocumentType.WalkIn ? "Walk In" : "Electronic")</span>
					</div>

					<div class="col-lg-6 col-12 mb-2 mb-lg-0">
						<span class="text-secondary d-lg-block text-end">Submitted at: @Model.DocumentAttachment.DocumentAttachment.AddedAt.ToString("MMM dd, yyy hh:mm tt")</span>
						@if (completed)
						{
							<span class="text-secondary  d-lg-block text-end">Completed in: @Model.DocumentAttachment.DocumentTracking.UpdatedAt.ToString("MMM dd, yyy hh:mm tt")</span>
						}
					</div>
				</div>

				<div class="mb-3 row rounded-2 bg-info-subtle mt-4 p-3">
					<div class="col-lg-1 col-12  mb-2 mb-lg-0">
						<div class="h-100 d-flex justify-content-lg-center align-items-center">
							<i class="fa-solid fa-file-signature fs-2"></i>
						</div>

					</div>

					<div class="col-lg-11 col-12">
						<h6 class="fw-bolder">(@Model.DocumentAttachment.Category.CategoryName)<span class="fw-lighter">@Model.DocumentAttachment.SubCategory.SubCategoryName</h6>
						@if (Model.DocumentAttachment.DocumentAttachment.Prioritization != null)
						{
							<h5 class="@(Model.DocumentAttachment.DocumentAttachment.Prioritization == Prioritization.Usual ? "text-primary":"text-danger") fw-bolder p-0 m-0">@Model.DocumentAttachment.DocumentAttachment.Prioritization</h5>
						}
						else
						{
							<h5 class="text-body-tertiary fw-bolder p-0 m-0">Not Set</h5>
						}
						@if (onprocess)
						{
							<form id="form-prioritization" method="post" asp-page-handler="SetPrioritization" asp-route-prevPage="@Model.PreviousPage" asp-route-pId="@Model.DocumentAttachment.DocumentAttachment.Id">
								@Html.AntiForgeryToken()
								<label asp-for="Prioritization" class="fst-italic fw-light"><i class="fa-solid fa-pen"></i></label>

								<select id="prioritization" asp-for="Prioritization" class="border-0 border-bottom border-2 border-primary bg-transparent" asp-items="@Html.GetEnumSelectList<Prioritization>()">
									<option selected hidden disabled value="">Select...</option>
								</select>


							</form>
						}
					</div>
				</div>
				<h6 class="py-2 mb-3 text-center bg-primary rounded text-white"><i class="fa-solid fa-file-signature"></i> Details</h6>
			</div>
			<div class="col-lg-6 col-12 mb-3">
				<label class="fw-bolder ">Subject:</label>
				<p class="text-body-tertiary">@Model.DocumentAttachment.DocumentAttachment.Subject</p>
			</div>
			<div class="col-lg-6 col-12 mb-3">
				<label class="fw-bolder ">Description:</label>
				<p class="text-body-tertiary">@Model.DocumentAttachment.DocumentAttachment.Description</p>
			</div>
			@if (!string.IsNullOrEmpty(Model.DocumentAttachment.DocumentAttachment.Comment))
			{
				<div class="col-lg-6 col-12 mb-3">
					<label class="fw-bolder ">Comment:</label>
					<p class="text-body-tertiary">@Model.DocumentAttachment.DocumentAttachment.Comment</p>
				</div>
			}
			<div class="col-12 mb-4">
				<h6 class="py-2 mb-3 rounded bg-primary text-white text-center"><i class="fa-solid fa-paperclip"></i> Attachment</h6>
				<div class="border-2 border-opacity-50 border-primary border rounded-3 p-2 p-lg-3 row">
					<div class="d-flex gap-4 align-items-center col-lg-5 col-12 mb-2 mb-lg-0">
						<i class="fa-solid fa-file-contract fs-2 text-primary"></i>
						<div class="d-flex flex-column">
							<h5>@finalFileName</h5>
							<span class="fst-italic">@(Model.DocumentAttachment.DocumentAttachment.UpdatedAt.ToString("dd MMM, yyy hh:mm tt"))(Updated)</span>
						</div>
					</div>
					<div class="d-flex gap-2 col-lg-7 col-12 justify-content-lg-end justify-content-start">

						@if (Model.CurrentStatus != ReviewerStatus.ToReceived)
						{

							<div class="d-flex align-items-center">
								@if (onprocess && !User.IsInRole("Sender"))
								{
									<form enctype="multipart/form-data" id="form-new-docs" asp-page-handler="ChangeDocument" asp-route-prevPage="@Model.PreviousPage" asp-route-pId="@Model.DocumentAttachment.DocumentAttachment.Id">
										@Html.AntiForgeryToken()
										<label for="new-docs" id="change-document" class="btn btn-success">
											<span class="d-none spinner-grow spinner-grow-sm loading-spinner"></span>
											<span class="d-none loading-text">Loading...</span>
											<i class="fa-solid fa-repeat"></i>
										</label>
										<input asp-for="NewDocuments" id="new-docs" accept="application/zip" class="d-none" />
									</form>
								}

							</div>
							<div class="d-flex align-items-center">
								<a asp-page-handler="DownloadFile" asp-route-filename="@Model.DocumentAttachment.DocumentAttachment.FileName" class="btn btn-primary"><i class="fa-solid fa-download "></i></a>
							</div>
						}

					</div>
				</div>
			</div>
			<div class="col-12">
				<div class="d-flex justify-content-end gap-2 align-items-center">
					<partial name="PartialViews/_ViewDocumentAction" model="new ViewDocumentActionInputModel{PrevPage = Model.PreviousPage, Id=Model.DocumentAttachment.DocumentAttachment.Id.ToString()}" />

					@if(pending || onprocess)
					{
						@if (Model.CurrentStatus == ReviewerStatus.ToReceived)
						{
							<button data-bs-toggle="modal" data-bs-target="#reviewing" class="text-white btn btn-warning">Review now <i class="fa-solid fa-question"></i></button>
						}
						else if (Model.CurrentStatus == ReviewerStatus.OnReview)
						{
							<button data-bs-toggle="modal" data-bs-target="#reviewed" class="btn btn-success text-white">Reviewed <i class="fa-solid fa-circle-check"></i></button>
						}
						else if (Model.CurrentStatus == ReviewerStatus.Reviewed)
						{

							<button data-bs-toggle="modal" data-bs-target="#approved-document" class="btn btn-success text-white">Approved <i class="fa fa-check"></i></button>
							<a asp-page="./ForwardDocument/Index" asp-route-prevPage="@Model.PreviousPage" asp-route-pId="@Model.DocumentAttachment.DocumentAttachment.Id" class="btn btn-info text-white">Next <i class="fa-solid fa-arrow-right"></i></a>
						}
					}
					else if (approved)
					{
						<button data-bs-toggle="modal" data-bs-target="#prepare-release" class="text-white btn btn-warning">Prepare release document <i class="fa fa-file-pen"></i></button>
					}

					else if (preparingRelease)
					{
						@if (Model.ReviewerDesignationName.Contains(Model.FirstDesignationName))
						{
							<button id="button-print" class="btn btn-primary text-white"><i class="fa fa-print"></i> Print Document Ref#.Code</button>
							<a class="btn btn-success text-white">Completed <i class="fa fa-check-double"></i></a>
						}
						else
						{
							<a asp-page="./Outgoing/Index" class="btn btn-info text-white">Go to outgoing document page</a>
						}
					}
					else if (completed)
					{
						@if ((!User.IsInRole("Sender") && Model.ReviewerDesignationName.Contains(Model.FirstDesignationName)) || (User.IsInRole("Sender") && Model.AccountId == Model.DocumentAttachment.DocumentAttachment.SenderId))
						{
							@if (!User.IsInRole("Sender") && Model.ReviewerDesignationName.Contains(Model.FirstDesignationName))
							{
								<button id="button-print" class="btn btn-primary text-white"><i class="fa fa-print"></i> Print Document Ref#.Code</button>
							}
							<button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal-@Model.DocumentAttachment.DocumentAttachment.Id">Delete <i class="fa-regular fa-trash-can"></i></button>
							<partial name="PartialViews/_DeleteDataModal" model="new DeleteModalViewModel(){Id=Model.DocumentAttachment.DocumentAttachment.Id.ToString(), returnUrl = returnUrlVal}" />
						}
					}
				</div>
			</div>


		</div>
	</div>
</div>


<noscript id="print-content">
	<div class="position-relative mb-5">
		<img src="~/Logo/@(Model.Logo)" width="80" height="80" class=" position-absolute rounded-circle border border-2 border-opacity-50 border-secondary">
		<h4 class="m-0 text-center">(CHED) Commision on Higher Education</h4>
		<h3 class="m-0 fw-bolder text-center">Document Ref#. Code</h3>
	</div>
	<hr class="mt-3" />
	<h3 class="text-center">@(Model.DocumentAttachment.DocumentAttachment.DocumentType == DocumentType.WalkIn ? $"dW{Model.DocumentAttachment.DocumentAttachment.Id.ToString("00000")}" : $"dE{Model.DocumentAttachment.DocumentAttachment.Id.ToString("00000")}")</h3>
	<hr />
	<div class="d-flex align-items-center justify-content-center">
		<img class="border-opacity-25 border-secondary border-4 rounded-1" src="@qrCode" style="border: dashed; height: 200px; width: 200px" />
	</div>
</noscript>
@section Scripts {
	<script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.9.359/pdf.min.js"></script>
	<script src="~/js/ViewDocument.js" asp-append-version="true"></script>
	<script>
		$(function () {
			$("#button-print").on("click", function () {
				//start_loader();
				var head = $('head').clone();
				var p = $('#outprint').clone();
				var el = $('<div class="print-wrapper">');
				var pContent = $($('noscript#print-content').html()).clone();
				head.find('title').text("Report - Print View");
				el.append(head);
				el.append(pContent);
				var nw = window.open("", "_blank", "width=1010,height=1000,top=50,left=75");
				nw.document.write(el.html());
				nw.document.close();

				// Maximize the window before printing

				nw.moveTo(0, 0);
				nw.resizeTo(screen.width, screen.height);

				setTimeout(() => {
					nw.print();
					setTimeout(() => {
						nw.close();
						end_loader();
					}, 200);
				}, 500);
			});
		})
	</script>

}
